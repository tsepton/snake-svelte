{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Gameboard.svelte",
    "Settings.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Game from \"./gameboard\";\n  import Snake from \"./snake\";\n  import Settings from \"./Components/Settings.svelte\";\n  import Gameboard from \"./Components/Gameboard.svelte\";\n\n  let game = new Game(10, 5);\n  let snake = new Snake(0, 0, game, 2);\n</script>\n\n<style>\n  #screen {\n    display: grid;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    grid-gap: 1rem;\n    grid-template-columns: 1fr 5fr;\n    overflow: hidden;\n  }\n\n  #settings {\n    height: 100vh;\n    width: 100%;\n    background-color: #f5f5f5;\n  }\n\n  #gameboard {\n    height: 100vh;\n    width: 100%;\n    background-color: #ffff;\n  }\n\n  #gameover {\n    /*position: absolute;*/\n    width: 100%;\n    height: 20px;\n  }\n</style>\n\n{#if snake.over}\n<div>\n  <span>Gameover</span>\n</div>\n{/if}\n<div id=\"screen\">\n  <div id=\"settings\">\n    <Settings {snake} />\n  </div>\n  <div id=\"gameboard\">\n    <Gameboard {snake} />\n  </div>\n</div>\n",
    "<script>\n  export let snake;\n\n  let interval;\n  let move = (keyPressed) => {\n    switch (keyPressed) {\n      case \"z\":\n        snake.move(\"up\");\n        break;\n      case \"s\":\n        snake.move(\"down\");\n        break;\n      case \"q\":\n        snake.move(\"left\");\n        break;\n      case \"d\":\n        snake.move(\"right\");\n        break;\n    }\n    // svelte only renders new assignements...\n    snake = snake;\n  };\n\n  // handling movements\n  document.onkeypress = (e) => {\n    move(e.key);\n    clearInterval(interval);\n    interval = setInterval(() => {\n      move(e.key);\n    }, 1000 / snake.speed);\n  };\n\n  function sameList(list1, list2) {\n    return JSON.stringify(list1) === JSON.stringify(list2);\n  }\n</script>\n\n<style>\n  #gameboard {\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n  }\n\n  h2 {\n    width: 100%;\n    font-weight: 200;\n    text-align: center;\n  }\n\n  .row {\n    flex-direction: column;\n  }\n\n  .game-square-0 {\n    width: 3rem;\n    height: 3rem;\n    background-color: #40444f;\n  }\n\n  .game-square-1 {\n    width: 3rem;\n    height: 3rem;\n    background-color: #535865;\n  }\n\n  [head=\"true\"] {\n    background-color: #3bb273;\n    border-radius: 30px;\n  }\n\n  [tail=\"true\"] {\n    background-color: #66cc96;\n  }\n\n  [candy=\"true\"] {\n    background-color: #c45baa;\n  }\n</style>\n\n<h2>Gameboard</h2>\n<div id=\"gameboard\">\n  {#each Array(snake.gameboard.size) as _, x}\n    <div class={'row'}>\n      {#each Array(snake.gameboard.size) as _, y}\n        <div\n          class={`game-square-${(y + x) % 2}`}\n          head={sameList(snake.head, [x, y])}\n          tail={snake.tail.some((list) => sameList(list, [x, y]))}\n          candy={snake.gameboard.candies.some((list) =>\n            sameList(list, [x, y])\n          )} />\n      {/each}\n    </div>\n  {/each}\n</div>\n",
    "<script>\n  export let snake;\n</script>\n\n<style>\n  #settings {\n    width: 100%;\n    height: min-content;\n    text-align: center;\n  }\n\n  h2 {\n    font-weight: 100;\n  }\n</style>\n\n<div id=\"settings\">\n  <h2>Game Settings</h2>\n  <div>\n    <p>Size (5 - 15) :</p><input type=\"number\" bind:value={snake.gameboard.size} />\n  </div>\n  <div>\n    <p>Speed (1 to 5) :</p><input type=\"number\" bind:value={snake.speed}/>\n  </div>\n  <div>\n    <p>Candy spawn (1 - 100) :</p><input type=\"number\" bind:value={snake.gameboard.candySpawn} />\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAWE,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,IAAI,CACd,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAC9B,QAAQ,CAAE,MAAM,AAClB,CAAC,AAED,SAAS,eAAC,CAAC,AACT,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AAED,UAAU,eAAC,CAAC,AACV,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,KAAK,AACzB,CAAC;ACOD,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC,AAED,EAAE,cAAC,CAAC,AACF,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,GAAG,CAChB,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,IAAI,cAAC,CAAC,AACJ,cAAc,CAAE,MAAM,AACxB,CAAC,AAED,cAAc,cAAC,CAAC,AACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AAED,cAAc,cAAC,CAAC,AACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AAED,CAAC,IAAI,CAAC,MAAM,CAAC,cAAC,CAAC,AACb,gBAAgB,CAAE,OAAO,CACzB,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,CAAC,IAAI,CAAC,MAAM,CAAC,cAAC,CAAC,AACb,gBAAgB,CAAE,OAAO,AAC3B,CAAC,AAED,CAAC,KAAK,CAAC,MAAM,CAAC,cAAC,CAAC,AACd,gBAAgB,CAAE,OAAO,AAC3B,CAAC;ACzED,SAAS,eAAC,CAAC,AACT,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,WAAW,CACnB,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,WAAW,CAAE,GAAG,AAClB,CAAC"
}